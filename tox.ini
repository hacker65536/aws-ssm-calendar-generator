[tox]
envlist = py38,py39,py310,py311,lint,type,security,docs
isolated_build = true

[testenv]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
commands = 
    pytest {posargs}

[testenv:py38]
basepython = python3.8

[testenv:py39]
basepython = python3.9

[testenv:py310]
basepython = python3.10

[testenv:py311]
basepython = python3.11

[testenv:lint]
deps = 
    flake8>=6.0.0
    flake8-docstrings
    flake8-import-order
    flake8-bugbear
    pydocstyle>=6.3.0
commands = 
    flake8 src/ tests/
    pydocstyle src/ --convention=google

[testenv:format]
deps = 
    black>=23.0.0
    isort>=5.12.0
commands = 
    black --check src/ tests/
    isort --check-only src/ tests/

[testenv:type]
deps = 
    mypy>=1.0.0
    types-requests
    types-python-dateutil
    types-pytz
commands = 
    mypy src/

[testenv:security]
deps = 
    bandit>=1.7.0
    safety>=2.3.0
commands = 
    bandit -r src/ -c .bandit
    safety check

[testenv:coverage]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
commands = 
    pytest --cov=src --cov-report=html --cov-report=term-missing --cov-fail-under=80

[testenv:docs]
deps = 
    sphinx>=5.0.0
    sphinx-rtd-theme
    sphinx-autodoc-typehints
commands = 
    sphinx-build -b html docs/ docs/_build/html

[testenv:integration]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
commands = 
    pytest tests/integration/ {posargs}

[testenv:e2e]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
commands = 
    pytest tests/integration/test_end_to_end.py {posargs}

[testenv:clean]
deps = 
commands = 
    python -c "
import shutil
import os
dirs_to_clean = ['build', 'dist', 'htmlcov', '.pytest_cache', '.mypy_cache']
for d in dirs_to_clean:
    if os.path.exists(d):
        shutil.rmtree(d)
        print(f'Cleaned {d}')
"

[flake8]
max-line-length = 88
extend-ignore = E203, W503, E501
exclude = .git, __pycache__, .venv, venv, .eggs, *.egg, build, dist, .mypy_cache, .pytest_cache, htmlcov